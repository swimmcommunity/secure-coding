{
    "id": "c7E8EiXEJEisl6g3dvW3",
    "name": "Unvalidated Redirects and Forwards",
    "content": [
        {
            "type": "text",
            "text": "It is common for web applications to redirect the user to a new page. For example, this often happens after the user successfully signs in - (s)he is redirected to the original page, this time authenticated. This is often done using a parameter in the HTTP request (such as `next`).\n\n> When a web application accepts untrusted input that could cause the web application to redirect the request to a URL contained within untrusted input. By modifying untrusted URL input to a malicious site, an attacker may successfully launch a phishing scam and steal user credentials. ([Source](https://cheatsheetseries.owasp.org/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.html))\n\nThis technique is common in phishing attacks, for example an attacker could redirect a user from a legitimate login form to a fake login form. If the page looks enough like the target site, and tricks the user into believing they mistyped their password, the attacker can convince the user to re-enter their credentials and send them to the attacker.\n\nHere is an example of a malicious redirect URL ([Source](https://security.openstack.org/guidelines/dg_avoid-unvalidated-redirects.html)):\n`https://good.com/login.php?next=http://bad.com/phonylogin.php`\n\n# Additional References\n* [OWASP - Unvalidated Redirects and Forwards Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.html)\n* [Openstack - Unvalidated URL redirect](https://security.openstack.org/guidelines/dg_avoid-unvalidated-redirects.html)"
        }
    ],
    "symbols": {},
    "file_version": "2.0.3",
    "meta": {
        "app_version": "0.5.5-0",
        "file_blobs": {}
    }
}
