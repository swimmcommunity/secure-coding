{
    "id": "zHvO6JZfpR0gajKmfuVJ",
    "name": "Bandit",
    "dod": "Fix the vulnerability without damaging `load_configuration`'s behavior",
    "description": "In this Unit we will use [Bandit](https://github.com/PyCQA/bandit/) is an open source and free static security analysis tool for Python. \n\nFrom Bandit's documentation:\n> Bandit is a tool designed to find common security issues in Python code. To do this Bandit processes each file, builds an AST from it, and runs appropriate plugins against the AST nodes. Once Bandit has finished scanning all the files it generates a report.\n\n# Setup\nInstall Bandit with `pip` using:\n`pip install bandit`\nor\n`pip3 install bandit`\n\nTo run Bandit, use:\n`bandit -r path/to/your/code`\n\n# What's wrong here?\nThe short file `read_config.py` has a vulnerability. You may not be familiar with it, but Bandit is! By using Bandit you will be able to find the vulnerability and then fix it.\n\n# What's the issue?\nIn this specific case, the author of `load_configuration` used `yaml.load` - a function that provides the ability to construct an arbitrary Python object. This may be dangerous if you receive a YAML document from an untrusted source.\n\nNote that Bandit also suggests an alternative function which is better to use in this case.\n\n# Additional references\n* [Bandit's plugin - yaml_load](https://bandit.readthedocs.io/en/latest/plugins/b506_yaml_load.html)\n* [PyYAML yaml.load(input) Deprecation](https://github.com/yaml/pyyaml/wiki/PyYAML-yaml.load(input)-Deprecation#how-to-disable-the-warning)\n* [Avoid dangerous file parsing and object serialization libraries](https://security.openstack.org/guidelines/dg_avoid-dangerous-input-parsing-libraries.html)\n* [YAML Deserialization Attack in Python](https://www.exploit-db.com/docs/english/47655-yaml-deserialization-attack-in-python.pdf?utm_source=dlvr.it&utm_medium=twitter)",
    "summary": "Of course, in this Unit you looked at one specific case that Bandit can recognize. Be sure to run static analysis tools often to avoid having known bugs in your application.",
    "hunksOrder": [
        "python/read_config.py_0"
    ],
    "tests": [
        "bandit -r ./python/read_config.py && python3 -m doctest ./python/read_config.py"
    ],
    "hints": [],
    "play_mode": "handson",
    "swimmPatch": {
        "python/read_config.py": {
            "diffType": "MODIFIED",
            "fileDiffHeader": "diff --git a/python/read_config.py b/python/read_config.py\nindex bb32013..2b8fb56 100644\n--- a/python/read_config.py\n+++ b/python/read_config.py",
            "hunks": [
                {
                    "swimmHunkMetadata": {
                        "hunkComments": []
                    },
                    "hunkDiffLines": [
                        "@@ -9,4 +9,4 @@",
                        "     {'conf': {'key1': 'value1', 'api_key': 'ab'}}",
                        "     \"\"\"",
                        "     with open(CONFIGURATION_PATH, 'r') as configuration_file:",
                        "-        return yaml.safe_load(configuration_file.read())",
                        "+        return yaml.load(configuration_file.read())"
                    ]
                }
            ]
        }
    },
    "app_version": "0.2.9",
    "file_version": "1.0.4"
}